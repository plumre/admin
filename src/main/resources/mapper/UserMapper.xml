<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cahodental.admin.dao.UserMapper">

    <insert id="saveUser" parameterType="com.cahodental.admin.model.po.UserPO">
        INSERT INTO user(
        id,
        name,
        age,
        gender,
        phone,
        email,
        address,
        type,
        shop_id,
        create_time
        ) VALUES (
        #{id},#{name},#{age},#{gender},#{phone},#{email},#{address},#{type},#{shopId},now()
        )
    </insert>

    <update id="updateUser" parameterType="com.cahodental.admin.model.po.UserPO">
        UPDATE user
        SET
        name = #{name},
        age = #{age},
        gender = #{gender},
        phone = #{phone},
        email = #{email},
        address = #{address},
        type = #{type},
        shop_id = #{shopId},
        update_time = now()
        WHERE id = #{id}
    </update>

    <select id="listUsers" resultType="java.util.List">
        SELECT
        u.id as id,
        u.name as name,
        u.age as age,
        u.gender as gender,
        u.phone as phone,
        u.email as email,
        u.address as address,
        u.type as type,
        u.shop_id as shopId,
        s.name as shopName,
        vc.balance as balance,
        u.create_time as createTime,
        u.update_time as updateTime
        FROM user u
        LEFT JOIN shop s ON s.id = u.shop_id
        left join vip_card vc on vc.id = u.id
        ORDER BY u.id ASC
    </select>

    <select id="listUsersByShopId" resultType="java.util.List">
        SELECT
        u.id as id,
        u.name as name,
        u.age as age,
        u.gender as gender,
        u.phone as phone,
        u.email as email,
        u.address as address,
        u.type as type,
        u.shop_id as shopId,
        s.name as shopName,
        vc.balance as balance,
        u.create_time as createTime,
        u.update_time as updateTime
        FROM user u
        LEFT JOIN shop s ON s.id = u.shop_id
        left join vip_card vc on vc.id = u.id
        where s.id = #{id}
        ORDER BY u.id desc
    </select>

    <select id="getUserById" parameterType="java.lang.Long" resultType="java.util.HashMap">
        SELECT
        u.id as id,
        u.name as name,
        u.age as age,
        u.gender as gender,
        u.phone as phone,
        u.email as email,
        u.address as address,
        u.type as type,
        u.shop_id as shopId,
        s.name as shopName,
        vc.balance as balance,
        u.create_time as createTime,
        u.update_time as updateTime
        FROM user u
        LEFT JOIN shop s ON s.id = u.shop_id
        left join vip_card vc on vc.id = u.id
        where id = #{id}
    </select>

    <select id="getUserByName" parameterType="java.lang.String" resultType="java.util.List">
        SELECT
        u.id as id,
        u.name as name,
        u.age as age,
        u.gender as gender,
        u.phone as phone,
        u.email as email,
        u.address as address,
        u.type as type,
        u.shop_id as shopId,
        s.name as shopName,
        vc.balance as balance,
        u.create_time as createTime,
        u.update_time as updateTime
        FROM user u
        LEFT JOIN shop s ON s.id = u.shop_id
        left join vip_card vc on vc.id = u.id
        where u.name like concat('%',#{name},'%')
    </select>

</mapper>